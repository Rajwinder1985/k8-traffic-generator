apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: metrics-generator
    component: core
  name: metrics-generator
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /metrics
    prometheus.io/port: "8000"
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: metrics-generator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: metrics-generator
        component: core
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8000"
    spec:
      containers:
        - env:
            - name: ENVIRONMENT
              value: "dev"
          image: pranaysahith/metrics_generator:0.0.2
          imagePullPolicy: Always
          name: metrics-generator
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
status: {}

---
apiVersion: v1
kind: Service
metadata:
  name: metrics-generator-service
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: http
  selector:
    app: metrics-generator
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: metrics-generator
  annotations:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
spec:
  rules:
    - host: metrics.sahith.in
      http:
        paths:
          - path: /
            backend:
              serviceName: metrics-generator-service
              servicePort: 8000

